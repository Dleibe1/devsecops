events {}

http {
    # Redirect all HTTP traffic to HTTPS
    server {
        listen 80;
        server_name $BRAND_NAME$TLD;

        return 301 https://$host$request_uri;
    }

    # Single domain (arkavo.org) with path-based routing
    server {
        listen 443 ssl http2;
        server_name $BRAND_NAME$TLD;

        ssl_certificate /keys/fullchain.pem;
        ssl_certificate_key /keys/privkey.pem;

        # Main application
        location / {
            proxy_pass http://frontend_$BRAND_NAME-www:5173;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        } 

        # OpenTDF service
        location /opentdf/ {
            rewrite ^/opentdf(/.*)?$ $1 break;  # Optional: Strip /opentdf before forwarding
            proxy_pass http://opentdf:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

     	    # Add CORS headers
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type";

            # Handle preflight requests
            if ($request_method = OPTIONS) {
              add_header Access-Control-Allow-Origin *;
              add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
              add_header Access-Control-Allow-Headers "Authorization, Content-Type";
              return 204;
            }
        }

        # Organizational backend
        location /org/ {
            rewrite ^/org(/.*)?$ $1 break;  # Optional: Strip /org before forwarding
            proxy_pass http://org-backend:8085;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}

