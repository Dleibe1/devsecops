networks:
  default:
    name: arkavo
services:
  keycloak:
    container_name: keycloak
    volumes:
      - ./keys/localhost.crt:/etc/x509/tls/localhost.crt
      - ./keys/localhost.key:/etc/x509/tls/localhost.key
      - ./keys/ca.jks:/truststore/truststore.jks
      - ./KCSetup:/opt/keycloak/KCSetup
      - ./oauth_certs:/opt/keycloak/oauth_certs
      - ./keycloak-startup.sh:/opt/keycloak/keycloak-startup.sh
    image: cgr.dev/chainguard/keycloak@sha256:37895558d2e0e93ffff75da5900f9ae7e79ec6d1c390b18b2ecea6cee45ec26f
    restart: always
    entrypoint: ["/bin/bash", "/opt/keycloak/keycloak-startup.sh"]
    environment:
      KC_PROXY: edge
      KC_HTTP_RELATIVE_PATH: /auth
      KC_DB_VENDOR: postgres
      KC_DB_URL_HOST: keycloakdb
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: changeme
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_BACKCHANNEL: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HTTP_ENABLED: "true"
      KC_HTTP_PORT: "8888"
      KC_HTTPS_PORT: "8443"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: changeme
      KEYCLOAK_FRONTEND_URL: "https://keycloak.juliancoy.us/auth"
      KC_HOSTNAME_URL: "https://keycloak.juliancoy.us/auth"
      KC_FEATURES: "preview,token-exchange"
      KC_HEALTH_ENABLED: "true"
      KC_HTTPS_KEY_STORE_PASSWORD: "password"
      KC_HTTPS_KEY_STORE_FILE: "/truststore/truststore.jks"
      KC_HTTPS_CERTIFICATE_FILE: "/etc/x509/tls/localhost.crt"
      KC_HTTPS_CERTIFICATE_KEY_FILE: "/etc/x509/tls/localhost.key"
      KC_HTTPS_CLIENT_AUTH: "request"
    ports:
      - "8888:8888"
      - "8443:8443"
    healthcheck:
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:8888/auth/health/live']
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 2m
